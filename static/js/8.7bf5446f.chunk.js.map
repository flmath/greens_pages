{"version":3,"sources":["private_pages/ErlangDBG/CodeBlock.js","private_pages/ErlangDBG/sections/Conclusion.js"],"names":["CodeBlock","_this$props","this","props","language","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_6__","style","coy","PureComponent","defaultProps","__webpack_require__","r","__webpack_exports__","d","Conclusion","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_markdown__WEBPACK_IMPORTED_MODULE_1__","react_markdown__WEBPACK_IMPORTED_MODULE_1___default","_CodeBlock__WEBPACK_IMPORTED_MODULE_2__","className","source","renderers","code"],"mappings":"gLAKMA,mLAUK,IAAAC,EACqBC,KAAKC,MAAzBC,EADDH,EACCG,SAAUC,EADXJ,EACWI,MAClB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBL,SAAUA,EAAUM,MAAOC,OAC3CN,UAdeO,iBAAlBZ,EAMGa,aAAe,CACpBT,SAAU,MAaCJ,6CCzBfc,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IAIe,SAASI,EAAWf,GA0BjC,OACEiB,EAAAb,EAAAC,cAAA,OAAKiB,UAAU,mBACdL,EAAAb,EAAAC,cAACe,EAAAhB,EAAD,CAAemB,OAxBpB,qsCAwBmCC,UAAW,CAAEC,KAAM5B","file":"static/js/8.7bf5446f.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { coy } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={coy}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from \"../CodeBlock\";\n\nexport default function Conclusion(props) {\n\nconst input =\n\n'* First, try to check other sources of information, in most cases, the erlang dump file should be enough.\\n'+\n'\\n'+\n'* If it is possible to install some debug/test framework instead, for example:\\n\\n'+\n'- https://massemanet.github.io/eper/redbug\\n\\n'+\n'- https://ferd.github.io/recon/\\n\\n'+\n\n'* If you are a consultant check your insurance.\\n'+\n'\\n'+\n'* Since the `return_trace` (and `exception_trace`) flag is potentially behavior-changing we\\'d better avoid it.\\n'+\n'\\n'+\n'* I have omitted `seq_trace` utilities, on purpose, I do not feel well when a single press of the tab key can hang your shell. '+\n'But if you are comfortable with sequence tracing on production nodes, then why have you read through this document in the first place?\\n'+\n'\\n'+\n'* If you still see need to use dbg on live node start from writing \\n'+\n'a processing function that has message counter as an accumulator and '+\n'safeguards to `dbg:stop/0` after a specific number of printed messages.\\n'+\n'\\n'+\n'* It is good when the number of messages is safeguarded in the first header of the defined function (see [`Fun25`](#CustomHandlerMessageFilter)).\\n\\n'+\n'* Alternatively just run `dbg:stop/0` after the first match if you don\\'t need to catch more than one message.\\n'+\n\n'You can mail me: flmathematic at gmail.com.'\n\n  return (\n    <div className=\"my_md_container\">\n     <ReactMarkdown source={input} renderers={{ code: CodeBlock }}/>\n    </div>\n  );\n}\n"],"sourceRoot":""}