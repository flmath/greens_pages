(window.webpackJsonp=window.webpackJsonp||[]).push([[13,17],{52:function(e,n,t){"use strict";t.r(n);var a=t(11),r=t(12),s=t(14),c=t(13),i=t(15),o=t(0),u=t.n(o),l=t(438),d=t(54),p=function(e){function n(){return Object(a.a)(this,n),Object(s.a)(this,Object(c.a)(n).apply(this,arguments))}return Object(i.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props,n=e.language,t=e.value;return u.a.createElement(l.a,{language:n,style:d.coy},t)}}]),n}(o.PureComponent);p.defaultProps={language:null},n.default=p},71:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return o});var a=t(0),r=t.n(a),s=t(53),c=t.n(s),i=t(52);function o(e){return r.a.createElement("div",{className:"my_md_container"},r.a.createElement(c.a,{source:"If the system consists of many OTP processes that are handled \nwith special messages and the process we are interested in \nis registered it is worth to narrow our search by tracing specific process.\n```erlang\n > dbg:tracer(process,{Fun,[]}),\n > Pid = global:whereis_name(tracing_experiments).\n <0.134.0>\n```\n\n```erlang\n > dbg:p(global:whereis_name(tracing_experiments), [c,p]).\n {ok,[{matched,nonode@nohost,1}]}\n```\n",renderers:{code:i.default}}))}}}]);
//# sourceMappingURL=13.6660bf84.chunk.js.map