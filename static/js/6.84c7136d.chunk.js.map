{"version":3,"sources":["private_pages/ErlangDBG/CodeBlock.js","private_pages/ErlangDBG/sections/BasicScenario.js"],"names":["CodeBlock","_this$props","this","props","language","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_6__","style","coy","PureComponent","defaultProps","__webpack_require__","r","__webpack_exports__","d","BasicScenario","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_markdown__WEBPACK_IMPORTED_MODULE_1__","react_markdown__WEBPACK_IMPORTED_MODULE_1___default","_CodeBlock__WEBPACK_IMPORTED_MODULE_2__","input","className","source","renderers","code"],"mappings":"gLAKMA,mLAUK,IAAAC,EACqBC,KAAKC,MAAzBC,EADDH,EACCG,SAAUC,EADXJ,EACWI,MAClB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBL,SAAUA,EAAUM,MAAOC,OAC3CN,UAdeO,iBAAlBZ,EAMGa,aAAe,CACpBT,SAAU,MAaCJ,6CCzBfc,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IAIMW,EACN,sqEA0Ee,SAASP,EAAcf,GAEpC,OACEiB,EAAAb,EAAAC,cAAA,OAAKkB,UAAU,mBACdN,EAAAb,EAAAC,cAACe,EAAAhB,EAAD,CAAeoB,OAAQF,EAAOG,UAAW,CAAEC,KAAM7B","file":"static/js/6.84c7136d.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { coy } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={coy}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import React from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from \"../CodeBlock\";\n\nconst input =\n'Let us start with a basic scenario. I will omit some of the messages printed out by the shell for clarity.\\n'+\n\n'```erlang\\n'+\n' > dbg:tracer(). \\n'+\n' {ok,<0.218.0>}\\n'+\n'```\\n'+\n'```erlang\\n'+\n' > dbg:p(all,[c]).\\n'+\n' {ok,[{matched,nonode@nohost,71}]}\\n'+\n'```\\n'+\n'```erlang\\n'+\n' > dbg:tp(tracing_experiments, []).\\n'+\n' (<0.117.0>) call tracing_experiments:module_info()\\n'+\n' {ok,[{matched,nonode@nohost,13}]}\\n'+\n'```\\n'+\n'Now lets switch traced process to more busy state:\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state().\\n'+\n'```\\n'+\n'We get messages in a loop:\\n'+\n'```erlang\\n'+\n' tracing_experiments.erl:86:<0.134.0>: io:format called from state keep_heavy_state number 8\\n'+\n' (<0.134.0>) call tracing_experiments:heavy_state(timeout,1000,#{iterator => 8})\\n'+\n' ...\\n'+\n'```\\n'+\n'Lets switch back:\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state().\\n'+\n' ok\\n'+\n'```\\n'+\n\n'The first message comes from debug function we have put into the code.\\n'+\n'The second is actually printed out by our `dbg:tracer/0`\\n'+\n'But if you look into the code, there is another `traced_function/2` that is present in the\\n'+\n'tracing_experiments module that is not printed out. It is because `dbg:tp/2` prints only the exported functions.\\n'+\n'For local functions we need also to run:\\n'+\n'```erlang\\n'+\n' > dbg:tpl(tracing_experiments, []).\\n'+\n' (<0.117.0>) call tracing_experiments:module_info()\\n'+\n' {ok,[{matched,nonode@nohost,14}]}\\n'+\n'```\\n'+\n'Let us see how it works:\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state().\\n'+\n' (<0.117.0>) call tracing_experiments:switch_state()\\n'+\n' tracing_experiments.erl:86:<0.134.0>: io:format called from state enter_heavy_state number 26\\n'+\n' (<0.134.0>) call tracing_experiments:light_state(cast,switch_state,#{iterator => 26})\\n'+\n' (<0.134.0>) call tracing_experiments:traced_function(enter_heavy_state,26)\\n'+\n' ok\\n'+\n'```\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state()\\n'+\n' ok \\n'+\n'```\\n'+\n\n'So we can see additional printout for `traced_function/2`.\\n'+\n'Which concludes the most basic scenario.\\n'+\n'Let clean our tracing setup.\\n'+\n'```erlang\\n'+\n' > dbg:ctp(\\'_\\').\\n'+\n' ok\\n'+\n'```\\n'+\n'Lets double check it.\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state().\\n'+\n' tracing_experiments.erl:86:<0.134.0>: io:format called from state enter_light_state number 39\\n'+\n'```\\n'+\n'\\n'+\n'```erlang\\n'+\n' > tracing_experiments:switch_state().\\n'+\n' ok\\n'+\n'```\\n'+\n'The call tracing is set off.\\n'\n\nexport default function BasicScenario(props) {\n\n  return (\n    <div className=\"my_md_container\">\n     <ReactMarkdown source={input} renderers={{ code: CodeBlock }}/>\n    </div>\n  );\n}\n"],"sourceRoot":""}